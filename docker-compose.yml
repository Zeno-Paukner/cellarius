
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
  
  emails-import:
    image: emails-import
    restart: unless-stopped
    ports:
      - 8000:8000
    environment:
      IMAP_PALIDO_USERNAME: ${IMAP_PALIDO_USERNAME}
      IMAP_PALIDO_EMAIL_PASSWORD: ${IMAP_PALIDO_EMAIL_PASSWORD}
      IMAP_PALIDO_SERVER: ${IMAP_PALIDO_SERVER}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
      
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  #gpt-neo-1-3B-docker:
  #  image: gpt-neo-1-3b-docker
  #  restart: unless-stopped
  #  ports:
  #    - 8001:8001