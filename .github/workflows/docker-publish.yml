name: Create and publish Docker image/package

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation. test

on:
  push:
    branches: [ 'main' ]

jobs:
  build_email_import:
    name: Build email import
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: cellarius-import-emails
    defaults:
      run:
        working-directory: ./import-emails-api-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: docker build . --tag $IMAGE_NAME
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  build_proxy:
    name: Build proxy
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: cellarius-proxy
    defaults:
      run:
        working-directory: ./proxy-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: docker build . --tag $IMAGE_NAME
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - name: Deploy to Leocloud
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - uses: actions-hub/kubectl@master
        with:
          args: get pods
  build_ai_api:
    name: Build ai-api
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: cellarius-ai-api
    defaults:
      run:
        working-directory: ./ai-api-docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        run: docker build . --tag $IMAGE_NAME
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      #- name: Deploy to Leocloud
      #- uses: actions-hub/kubectl@master
      #  env:
      #    KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #
      #- uses: actions-hub/kubectl@master
      #  with:
      #    args: get pods
      #    args: apply -f ../k8s/deployment.yaml
      #- uses: actions-hub/kubectl@master
      #  env:
      #    KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #  with:
      #    args: get pods


#  build_front_end:
#    name: Build front-end
#    runs-on: ubuntu-latest
#    env:
#      IMAGE_NAME: cellarius-front-end
#    defaults:
#      run:
#        working-directory: ./front-end
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#      - name: Login to GitHub Packages
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Push image
#        run: |
#          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
#          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
#          VERSION=latest
#          echo IMAGE_ID=$IMAGE_ID
#         echo VERSION=$VERSION
#          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
#          docker push $IMAGE_ID:$VERSION